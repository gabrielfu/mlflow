{"version":3,"file":"development.js","sources":["../src/development/Banner/Banner.tsx","../src/development/ChatUI/ChatInput.tsx","../src/development/ChatUI/CodeSnippet.tsx","../src/development/ChatUI/Feedback.tsx","../src/development/ChatUI/Message.tsx","../src/development/ChatUI/MessageActionButton.tsx","../src/development/ChatUI/MessageBody.tsx","../src/development/ChatUI/MessageHeader.tsx","../src/development/ChatUI/MessagePagination.tsx","../src/development/ChatUI/index.tsx","../src/development/ContextMenu/ContextMenu.tsx","../src/development/Slider/Slider.tsx","../src/development/Toolbar/Toolbar.tsx"],"sourcesContent":["import { css } from '@emotion/react';\nimport type { ReactNode } from 'react';\nimport React from 'react';\n\nimport { Button } from '../../design-system/Button';\nimport type { DesignSystemThemeInterface } from '../../design-system/Hooks/useDesignSystemTheme';\nimport { useDesignSystemTheme } from '../../design-system/Hooks/useDesignSystemTheme';\nimport { CloseIcon, DangerIcon, MegaphoneIcon, WarningIcon } from '../../design-system/Icon';\nimport { Tooltip } from '../../design-system/Tooltip';\nimport { Typography } from '../../design-system/Typography';\nimport { primitiveColors } from '../../theme/_generated/PrimitiveColors';\n\nconst { Text, Paragraph } = Typography;\n\nexport const BANNER_MIN_HEIGHT = 68;\n// Max height will allow 2 lines of description (3 lines total)\nexport const BANNER_MAX_HEIGHT = 82;\n\nexport type BannerLevel = 'info' | 'warning' | 'error';\ntype BannerColorScheme = {\n  backgroundDefaultColor: string;\n  actionButtonBackgroundHoverColor: string;\n  actionButtonBackgroundPressColor: string;\n  textColor: string;\n  textHoverColor: string;\n  textPressColor: string;\n};\n\nexport interface BannerProps {\n  level: BannerLevel;\n  message: ReactNode;\n  description?: ReactNode;\n  ctaText?: ReactNode;\n  onAccept?: () => void;\n  closable?: boolean;\n  onClose?: () => void;\n  'data-testid'?: string;\n\n  // Temporary prop to enable passing in localized string until officials supported in Dubois\n  closeButtonAriaLabel?: string;\n}\n\nconst useStyles = (props: BannerProps, theme: DesignSystemThemeInterface['theme']) => {\n  const bannerLevelToBannerColors: { [key in BannerLevel]: BannerColorScheme } = {\n    info: {\n      backgroundDefaultColor: theme.colors.actionPrimaryBackgroundDefault,\n      actionButtonBackgroundHoverColor: theme.colors.actionPrimaryBackgroundHover,\n      actionButtonBackgroundPressColor: theme.colors.actionPrimaryBackgroundPress,\n      textColor: theme.colors.actionPrimaryTextDefault,\n      textHoverColor: theme.colors.actionPrimaryTextHover,\n      textPressColor: theme.colors.actionPrimaryTextPress,\n    },\n    // TODO (PLAT-80558, zack.brody) Update hover and press states once we have colors for these\n    warning: {\n      backgroundDefaultColor: theme.colors.tagLemon,\n      actionButtonBackgroundHoverColor: theme.colors.tagLemon,\n      actionButtonBackgroundPressColor: theme.colors.tagLemon,\n      textColor: primitiveColors.grey800,\n      textHoverColor: primitiveColors.grey800,\n      textPressColor: primitiveColors.grey800,\n    },\n    error: {\n      backgroundDefaultColor: theme.colors.actionDangerPrimaryBackgroundDefault,\n      actionButtonBackgroundHoverColor: theme.colors.actionDangerPrimaryBackgroundHover,\n      actionButtonBackgroundPressColor: theme.colors.actionDangerPrimaryBackgroundPress,\n      textColor: theme.colors.actionPrimaryTextDefault,\n      textHoverColor: theme.colors.actionPrimaryTextHover,\n      textPressColor: theme.colors.actionPrimaryTextPress,\n    },\n  };\n\n  const colorScheme = bannerLevelToBannerColors[props.level];\n\n  return {\n    banner: css`\n      max-height: ${BANNER_MAX_HEIGHT}px;\n      display: flex;\n      align-items: center;\n      width: 100%;\n      padding: 8px;\n      box-sizing: border-box;\n      background-color: ${colorScheme.backgroundDefaultColor};\n    `,\n    iconContainer: css`\n      display: flex;\n      color: ${colorScheme.textColor};\n      align-self: ${props.description ? 'flex-start' : 'center'};\n      box-sizing: border-box;\n      max-width: 60px;\n      padding-top: 4px;\n      padding-bottom: 4px;\n      padding-right: ${theme.spacing.xs}px;\n    `,\n    mainContent: css`\n      flex-direction: column;\n      align-self: ${props.description ? 'flex-start' : 'center'};\n      display: flex;\n      box-sizing: border-box;\n      padding-right: ${theme.spacing.sm}px;\n      padding-top: 2px;\n      padding-bottom: 2px;\n      // Add min-width so that ellipsis in child components will show.\n      min-width: ${theme.spacing.lg}px;\n    `,\n    messageTextBlock: css`\n      // Override text color to action text color\n      && {\n        color: ${colorScheme.textColor};\n      }\n    `,\n    descriptionBlock: css`\n      // Override text color to action text color\n      && {\n        color: ${colorScheme.textColor};\n      }\n    `,\n    rightContainer: css`\n      margin-left: auto;\n      display: flex;\n      align-items: center;\n    `,\n    closeIconContainer: css`\n      display: flex;\n      padding: ${theme.spacing.xs}px ${theme.spacing.xs}px ${theme.spacing.xs}px ${theme.spacing.xs}px;\n      margin-left: ${theme.spacing.xs}px;\n      box-sizing: border-box;\n      line-height: 0;\n    `,\n    closeIcon: css`\n      color: ${colorScheme.textColor}!important;\n      cursor: pointer;\n    `,\n    actionButtonContainer: css`\n      margin-right: ${theme.spacing.xs}px;\n    `,\n    // Override design system colors to show the use the action text color for text and border.\n    // Also overrides text for links.\n    actionButton: css`\n      color: ${colorScheme.textColor}!important;\n      border-color: ${colorScheme.textColor}!important;\n      \n      &:focus,\n      &:hover {\n        border-color: ${colorScheme.textHoverColor}!important;\n        color: ${colorScheme.textHoverColor}!important;\n        background-color: ${colorScheme.actionButtonBackgroundHoverColor}!important;\n      }\n      \n      &:active {\n        border-color: ${colorScheme.textPressColor}!important;\n        color: ${colorScheme.textPressColor}!important;\n        background-color: ${colorScheme.actionButtonBackgroundPressColor}!important;\n      }\n\n      a {\n        color: ${theme.colors.actionPrimaryTextDefault};\n      }\n      \n      a:focus,\n      a:hover {\n        color: ${colorScheme.textHoverColor};\n        text-decoration: none;\n      }\n      \n      a:active {\n        color: ${colorScheme.textPressColor}\n        text-decoration: none;\n      }\n    `,\n  };\n};\n\nconst levelToIconMap: { [key in BannerLevel]: ReactNode } = {\n  info: <MegaphoneIcon data-testid=\"level-info-icon\" />,\n  warning: <WarningIcon data-testid=\"level-warning-icon\" />,\n  error: <DangerIcon data-testid=\"level-error-icon\" />,\n};\n\nexport const Banner: React.FC<BannerProps> = (props) => {\n  const { level, message, description, ctaText, onAccept, closable, onClose, closeButtonAriaLabel } = props;\n  const [closed, setClosed] = React.useState(false);\n  const [showingDescriptionEllipses, setShowingDescriptionEllipses] = React.useState(false);\n  const [showingMessageEllipses, setShowingMessageEllipses] = React.useState(false);\n\n  const { theme } = useDesignSystemTheme();\n  const styles = useStyles(props, theme);\n\n  const actionButton =\n    onAccept && ctaText ? (\n      <div css={styles.actionButtonContainer}>\n        <Button onClick={onAccept} css={styles.actionButton} size=\"small\">\n          {ctaText}\n        </Button>\n      </div>\n    ) : null;\n  const close =\n    closable !== false ? (\n      <div css={styles.closeIconContainer}>\n        <a\n          onClick={() => {\n            if (onClose) {\n              onClose();\n            }\n            setClosed(true);\n          }}\n          aria-label={closeButtonAriaLabel ?? 'Close'}\n          data-testid=\"banner-dismiss\"\n        >\n          <CloseIcon css={styles.closeIcon} />\n        </a>\n      </div>\n    ) : null;\n\n  const messageElement = (\n    <Text size=\"md\" ellipsis={{ onEllipsis: setShowingMessageEllipses }} bold css={styles.messageTextBlock}>\n      {message}\n    </Text>\n  );\n\n  const descriptionElement = (\n    <Paragraph\n      ellipsis={{ rows: 2, onEllipsis: setShowingDescriptionEllipses }}\n      withoutMargins\n      css={styles.descriptionBlock}\n    >\n      {description}\n    </Paragraph>\n  );\n\n  const descriptionElementWithConditionalTooltip = showingDescriptionEllipses ? (\n    <Tooltip title={description} placement=\"bottom\">\n      {descriptionElement}\n    </Tooltip>\n  ) : (\n    descriptionElement\n  );\n\n  return (\n    <>\n      {!closed && (\n        <div css={styles.banner} className=\"banner\" data-testid={props['data-testid']}>\n          <div css={styles.iconContainer}>{levelToIconMap[level]}</div>\n          <div css={styles.mainContent}>\n            {showingMessageEllipses ? (\n              <Tooltip title={message} placement=\"bottom\">\n                {messageElement}\n              </Tooltip>\n            ) : (\n              messageElement\n            )}\n            {description && descriptionElementWithConditionalTooltip}\n          </div>\n          <div css={styles.rightContainer}>\n            {actionButton}\n            {close}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n","import { css } from '@emotion/react';\nimport React from 'react';\n\nimport { Button } from '../../design-system/Button';\nimport { useDesignSystemTheme } from '../../design-system/Hooks/useDesignSystemTheme';\nimport { CursorIcon } from '../../design-system/Icon';\nimport { Input } from '../../design-system/Input';\nimport type { TextAreaProps } from '../../design-system/Input';\n\ntype ChatInputProps = {\n  className?: string;\n  textAreaProps?: TextAreaProps;\n  onSubmit?: (value: string) => void;\n  suggestionButtons?: React.ReactNode;\n};\n\nconst chatInputStyles = {\n  container: css({\n    backgroundColor: 'var(--background-primary)',\n    padding: 'var(--spacing-sm)',\n    position: 'relative',\n  }),\n\n  suggestionButtons: css({\n    display: 'flex',\n    gap: 'var(--spacing-sm)',\n    marginBottom: 'var(--spacing-sm)',\n  }),\n\n  textArea: css({\n    minWidth: '100%',\n    maxHeight: '150px !important',\n  }),\n\n  button: css({\n    position: 'absolute',\n    bottom: 'calc(var(--spacing-sm) + 4px)',\n    right: 'calc(var(--spacing-sm) + 4px)',\n    // Flip horizontally; the existing icon points to the left but this should be pointing to the right.\n    transform: 'scaleX(-1)',\n  }),\n};\n\nexport const ChatInput = ({ className, onSubmit, textAreaProps, suggestionButtons }: ChatInputProps) => {\n  const { theme } = useDesignSystemTheme();\n  const [value, setValue] = React.useState('');\n\n  const handleSubmit = () => {\n    if (!value) {\n      return;\n    }\n\n    onSubmit?.(value);\n    setValue('');\n  };\n\n  return (\n    <div\n      css={chatInputStyles.container}\n      style={{\n        ['--spacing-sm' as string]: `${theme.spacing.sm}px`,\n        ['--background-primary' as string]: theme.colors.backgroundPrimary,\n        ['--border-decorative' as string]: theme.colors.borderDecorative,\n      }}\n      className={className}\n    >\n      {suggestionButtons && <div css={chatInputStyles.suggestionButtons}>{suggestionButtons}</div>}\n\n      <Input.TextArea\n        autoSize\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n        placeholder=\"Send a message\"\n        css={chatInputStyles.textArea}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter' && !e.metaKey && !e.ctrlKey && !e.shiftKey) {\n            e.preventDefault();\n            handleSubmit();\n          }\n        }}\n        {...textAreaProps}\n      />\n      <Button size=\"small\" css={chatInputStyles.button} icon={<CursorIcon />} onClick={handleSubmit} />\n    </div>\n  );\n};\n\nexport default ChatInput;\n","import { css } from '@emotion/react';\n\nimport { useDesignSystemTheme } from '../../design-system/Hooks/useDesignSystemTheme';\n\ntype CodeSnippetProps = {\n  language: string;\n  buttons: React.ReactNode;\n  children: React.ReactNode;\n};\n\nconst snippetStyles = {\n  container: css({\n    margin: 'var(--spacing-md) 0',\n  }),\n\n  header: css({\n    backgroundColor: 'var(--color-grey700)',\n    color: 'var(--color-grey300)',\n    borderRadius: 'var(--border-radius) var(--border-radius) 0 0',\n    padding: 'var(--spacing-sm) var(--spacing-sm) var(--spacing-sm) var(--spacing-md)',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  }),\n\n  buttonSvg: css({\n    svg: {\n      color: 'var(--color-grey300)',\n    },\n  }),\n\n  code: css({\n    padding: 'var(--spacing-sm) var(--spacing-md)',\n    margin: '0',\n    borderRadius: '0 0 var(--border-radius) var(--border-radius)',\n    backgroundColor: 'var(--color-grey800)',\n    color: 'var(--color-grey300)',\n  }),\n};\n\nexport const CodeSnippet = ({ language, buttons, children }: CodeSnippetProps) => {\n  const { theme } = useDesignSystemTheme();\n\n  return (\n    <div\n      css={snippetStyles.container}\n      style={{\n        ['--spacing-sm' as string]: `${theme.spacing.sm}px`,\n        ['--spacing-md' as string]: `${theme.spacing.md}px`,\n        ['--border-radius' as string]: `${theme.general.borderRadiusBase}px`,\n        ['--color-grey700' as string]: theme.colors.grey700,\n        ['--color-grey300' as string]: theme.colors.grey300,\n        ['--color-grey800' as string]: theme.colors.grey800,\n      }}\n    >\n      <div css={snippetStyles.header}>\n        <span>{language}</span>\n        <div css={snippetStyles.buttonSvg}>{buttons}</div>\n      </div>\n      <pre css={snippetStyles.code}>{children}</pre>\n    </div>\n  );\n};\n\nexport default CodeSnippet;\n","import { css } from '@emotion/react';\nimport { useState } from 'react';\n\nimport { Button } from '../../design-system/Button';\nimport { useDesignSystemTheme } from '../../design-system/Hooks/useDesignSystemTheme';\nimport { CloseIcon, FaceFrownIcon, FaceNeutralIcon, FaceSmileIcon } from '../../design-system/Icon';\nimport { Typography } from '../../design-system/Typography';\n\ntype FeedbackProps = {\n  onFeedback: (feedback: 'Better' | 'Same' | 'Worse') => void;\n};\n\nconst feedbackStyles = {\n  container: css({\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'flex-end',\n  }),\n\n  feedbackPrompt: css({\n    display: 'flex',\n    flexDirection: 'column',\n    gap: 'var(--spacing-sm)',\n  }),\n\n  feedbackOptions: css({\n    display: 'flex',\n    gap: 'var(--spacing-sm)',\n  }),\n};\n\nexport const Feedback = ({ onFeedback }: FeedbackProps) => {\n  const [isVisible, setIsVisible] = useState(true);\n  const { theme } = useDesignSystemTheme();\n\n  if (!isVisible) {\n    return null;\n  }\n\n  return (\n    <div\n      css={feedbackStyles.container}\n      style={{\n        ['--spacing-sm' as string]: `${theme.spacing.sm}px`,\n        ['--text-secondary' as string]: theme.colors.textSecondary,\n      }}\n    >\n      <div css={feedbackStyles.feedbackPrompt}>\n        <Typography.Text\n          style={{\n            color: theme.colors.textSecondary,\n          }}\n        >\n          Was this response:\n        </Typography.Text>\n        <div css={feedbackStyles.feedbackOptions}>\n          <Button\n            icon={<FaceSmileIcon />}\n            onClick={() => {\n              onFeedback('Better');\n              setIsVisible(false);\n            }}\n          >\n            Better\n          </Button>\n          <Button\n            icon={<FaceNeutralIcon />}\n            onClick={() => {\n              onFeedback('Same');\n              setIsVisible(false);\n            }}\n          >\n            Same\n          </Button>\n          <Button\n            icon={<FaceFrownIcon />}\n            onClick={() => {\n              onFeedback('Worse');\n              setIsVisible(false);\n            }}\n          >\n            Worse\n          </Button>\n        </div>\n      </div>\n      <Button icon={<CloseIcon />} onClick={() => setIsVisible(false)} />\n    </div>\n  );\n};\n\nexport default Feedback;\n","import { css } from '@emotion/react';\n\nimport { useDesignSystemTheme } from '../../design-system/Hooks/useDesignSystemTheme';\n\ntype MessageProps = {\n  isActiveUser: boolean;\n  children: React.ReactNode;\n};\n\nconst messageStyles = {\n  container: css({\n    display: 'flex',\n    flexDirection: 'column',\n    gap: 'var(--spacing-sm)',\n    paddingTop: 'var(--spacing-md)',\n    paddingRight: 'var(--spacing-sm)',\n    paddingBottom: 'var(--spacing-md)',\n    paddingLeft: 'calc(var(--spacing-md) * 2)',\n    backgroundColor: 'var(--background)',\n    borderBottom: `1px solid var(--border-decorative)`,\n  }),\n};\n\nexport const Message = ({ isActiveUser, children }: MessageProps) => {\n  const { theme } = useDesignSystemTheme();\n\n  return (\n    <div\n      css={messageStyles.container}\n      style={{\n        ['--spacing-sm' as string]: `${theme.spacing.sm}px`,\n        ['--spacing-md' as string]: `${theme.spacing.md}px`,\n        ['--background' as string]: isActiveUser ? theme.colors.backgroundPrimary : theme.colors.backgroundSecondary,\n        ['--border-decorative' as string]: theme.colors.borderDecorative,\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Message;\n","import { css } from '@emotion/react';\nimport { useEffect, useState } from 'react';\n\nimport type { ButtonProps } from '../../design-system/Button';\nimport { Button } from '../../design-system/Button';\nimport { useDesignSystemTheme } from '../../design-system/Hooks/useDesignSystemTheme';\nimport { CheckIcon } from '../../design-system/Icon';\n\nconst buttonStyles = {\n  container: css({\n    position: 'relative',\n    display: 'inline-block',\n    width: 'max-content',\n  }),\n  checkIcon: css({\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    pointerEvents: 'none',\n\n    svg: {\n      color: 'var(--checkmark-color)',\n    },\n  }),\n};\n\nconst MessageActionButton = (props: ButtonProps) => {\n  const [showCheck, setShowCheck] = useState(false);\n  const { theme } = useDesignSystemTheme();\n\n  const handleClick = (e: React.MouseEvent<HTMLElement>) => {\n    setShowCheck(true);\n    props.onClick?.(e);\n  };\n\n  if (props.children) {\n    throw new Error('MessageActionButton: Children not supported; use as icon-only button.');\n  }\n\n  useEffect(() => {\n    let timeoutId: NodeJS.Timeout;\n    if (showCheck) {\n      timeoutId = setTimeout(() => {\n        setShowCheck(false);\n      }, 750);\n    }\n    return () => {\n      clearTimeout(timeoutId);\n    };\n  }, [showCheck]);\n\n  return (\n    <span\n      css={buttonStyles.container}\n      style={{\n        ['--checkmark-color' as string]: theme.colors.green500,\n      }}\n    >\n      <Button\n        size=\"small\"\n        {...props}\n        onClick={handleClick}\n        css={{\n          svg: {\n            transition: showCheck ? 'none' : 'opacity 350ms',\n            opacity: showCheck ? '0' : '1',\n          },\n        }}\n      />\n      <CheckIcon\n        css={buttonStyles.checkIcon}\n        style={{\n          transition: showCheck ? 'none' : 'opacity 350ms',\n          opacity: showCheck ? '1' : '0',\n        }}\n      />\n    </span>\n  );\n};\n\nexport default MessageActionButton;\n","import { useDesignSystemTheme } from '../../design-system/Hooks/useDesignSystemTheme';\n\ntype MessageBodyProps = {\n  children: React.ReactNode;\n};\n\nconst MessageBody = ({ children }: MessageBodyProps) => {\n  const { getPrefixedClassName } = useDesignSystemTheme();\n\n  const typographyClassname = getPrefixedClassName('typography');\n\n  return (\n    <div\n      css={{\n        [`& .${typographyClassname}:last-of-type`]: {\n          marginBottom: 0,\n        },\n      }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default MessageBody;\n","import { css } from '@emotion/react';\n\nimport { useDesignSystemTheme } from '../../design-system/Hooks/useDesignSystemTheme';\nimport { Typography } from '../../design-system/Typography';\n\ntype MessageHeaderProps = {\n  userName: React.ReactNode;\n  customHeaderIcon?: React.ReactNode;\n  avatarURL?: string;\n  leftContent?: React.ReactNode;\n  rightContent?: React.ReactNode;\n};\n\nconst headerStyles = {\n  container: css({\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    position: 'relative',\n  }),\n\n  leftContent: css({\n    display: 'flex',\n    alignItems: 'center',\n    gap: 'var(--spacing-sm)',\n  }),\n\n  rightContent: css({\n    display: 'flex',\n    alignItems: 'center',\n  }),\n\n  avatar: css({\n    position: 'absolute',\n    left: -22,\n    top: 2,\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    width: 'var(--spacing-md)',\n    height: 'var(--spacing-md)',\n    borderRadius: '50%',\n  }),\n};\nconst avatarDefaultBackgroundImage = 'linear-gradient(180deg, #FFD983 0%, #FFB800 100%)';\n\nconst MessageHeader = ({ userName, customHeaderIcon, avatarURL, leftContent, rightContent }: MessageHeaderProps) => {\n  const { theme } = useDesignSystemTheme();\n  return (\n    <div\n      css={headerStyles.container}\n      style={{\n        ['--spacing-sm' as string]: `${theme.spacing.sm}px`,\n        ['--spacing-md' as string]: `${theme.spacing.md}px`,\n      }}\n    >\n      <div css={headerStyles.leftContent}>\n        {customHeaderIcon ? (\n          customHeaderIcon\n        ) : (\n          <div\n            css={headerStyles.avatar}\n            style={{\n              backgroundImage: avatarURL\n                ? `url(${avatarURL}), ${avatarDefaultBackgroundImage}`\n                : avatarDefaultBackgroundImage,\n            }}\n          />\n        )}\n        <Typography.Text bold>{userName}</Typography.Text>\n        {leftContent}\n      </div>\n      <div css={headerStyles.rightContent}>{rightContent}</div>\n    </div>\n  );\n};\n\nexport default MessageHeader;\n","import { css } from '@emotion/react';\n\nimport { useDesignSystemTheme } from '../../design-system/Hooks/useDesignSystemTheme';\nimport { ChevronLeftIcon, ChevronRightIcon } from '../../design-system/Icon';\nimport { Typography } from '../../design-system/Typography';\n\ntype PaginationProps = {\n  onPrevious: () => void;\n  onNext: () => void;\n  current: number;\n  total: number;\n};\n\nconst paginationStyles = {\n  container: css({\n    display: 'flex',\n    alignItems: 'center',\n    justifyItems: 'center',\n    gap: 'var(--spacing-sm)',\n  }),\n\n  button: css({\n    border: 'none',\n    backgroundColor: 'transparent',\n    padding: 0,\n    display: 'flex',\n    height: 'var(--spacing-md)',\n    alignItems: 'center',\n  }),\n};\n\nexport const MessagePagination = ({ onPrevious, onNext, current, total }: PaginationProps) => {\n  const { theme } = useDesignSystemTheme();\n\n  return (\n    <div\n      css={paginationStyles.container}\n      style={{\n        ['--spacing-sm' as string]: `${theme.spacing.sm}px`,\n        ['--spacing-md' as string]: `${theme.spacing.md}px`,\n      }}\n    >\n      <button\n        css={paginationStyles.button}\n        onClick={onPrevious}\n        style={{\n          color: current === 1 ? theme.colors.actionDisabledText : theme.colors.textSecondary,\n          cursor: current === 1 ? 'arrow' : 'pointer',\n        }}\n      >\n        <ChevronLeftIcon />\n      </button>\n      <Typography.Text\n        style={{\n          color: theme.colors.textSecondary,\n        }}\n      >{`${current}/${total}`}</Typography.Text>\n      <button\n        css={paginationStyles.button}\n        onClick={onNext}\n        style={{\n          color: current === total ? theme.colors.actionDisabledText : theme.colors.textSecondary,\n          cursor: current === total ? 'arrow' : 'pointer',\n        }}\n      >\n        <ChevronRightIcon />\n      </button>\n    </div>\n  );\n};\n\nexport default MessagePagination;\n","import ChatInput from './ChatInput';\nimport CodeSnippet from './CodeSnippet';\nimport Feedback from './Feedback';\nimport Message from './Message';\nimport MessageActionButton from './MessageActionButton';\nimport MessageBody from './MessageBody';\nimport MessageHeader from './MessageHeader';\nimport MessagePagination from './MessagePagination';\n\nexport const ChatUI = {\n  MessageActionButton,\n  MessageHeader,\n  MessageBody,\n  MessagePagination,\n  Message,\n  Feedback,\n  CodeSnippet,\n  ChatInput,\n};\n","import type { Theme } from '@emotion/react';\nimport { css } from '@emotion/react';\nimport type {\n  ContextMenuContentProps as RadixContextMenuContentProps,\n  ContextMenuSubContentProps as RadixContextMenuSubContentProps,\n  ContextMenuItemProps as RadixContextMenuItemProps,\n  ContextMenuCheckboxItemProps as RadixContextMenuCheckboxItemProps,\n  ContextMenuRadioItemProps as RadixContextMenuRadioItemProps,\n  ContextMenuSubTriggerProps as RadixContextMenuSubTriggerProps,\n  ContextMenuLabelProps as RadixContextMenuLabelProps,\n} from '@radix-ui/react-context-menu';\nimport {\n  ContextMenu as RadixContextMenu,\n  ContextMenuArrow,\n  ContextMenuCheckboxItem,\n  ContextMenuContent,\n  ContextMenuGroup,\n  ContextMenuItemIndicator,\n  ContextMenuLabel,\n  ContextMenuPortal,\n  ContextMenuRadioGroup,\n  ContextMenuRadioItem,\n  ContextMenuSeparator,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuTrigger,\n  ContextMenuItem,\n} from '@radix-ui/react-context-menu';\n\nimport { CheckIcon, useDesignSystemTheme } from '../../design-system';\nimport {\n  dropdownContentStyles,\n  dropdownItemStyles,\n  dropdownSeparatorStyles,\n} from '../../design-system/DropdownMenu/DropdownMenu';\nimport { useDesignSystemContext } from '../../design-system/Hooks/useDesignSystemContext';\n\nexport const Root = RadixContextMenu;\nexport const Trigger = ContextMenuTrigger;\nexport const ItemIndicator = ContextMenuItemIndicator;\nexport const Group = ContextMenuGroup;\nexport const RadioGroup = ContextMenuRadioGroup;\nexport const Arrow = ContextMenuArrow;\nexport const Sub = ContextMenuSub;\n\nexport interface ContextMenuSubTriggerProps extends RadixContextMenuSubTriggerProps {}\n\nexport const SubTrigger = ({ children, ...props }: ContextMenuSubTriggerProps) => {\n  const { theme } = useDesignSystemTheme();\n\n  return (\n    <ContextMenuSubTrigger {...props} css={dropdownItemStyles(theme)}>\n      {children}\n    </ContextMenuSubTrigger>\n  );\n};\n\nexport interface ContextMenuContentProps extends RadixContextMenuContentProps {\n  minWidth?: number;\n}\n\nexport const Content = ({ children, minWidth, ...childrenProps }: ContextMenuContentProps) => {\n  const { getPopupContainer } = useDesignSystemContext();\n  const { theme } = useDesignSystemTheme();\n\n  return (\n    <ContextMenuPortal container={getPopupContainer && getPopupContainer()}>\n      <ContextMenuContent {...childrenProps} css={[dropdownContentStyles(theme), { minWidth }]}>\n        {children}\n      </ContextMenuContent>\n    </ContextMenuPortal>\n  );\n};\n\nexport interface ContextMenuSubContentProps extends RadixContextMenuSubContentProps {\n  minWidth?: number;\n}\n\nexport const SubContent = ({ children, minWidth, ...childrenProps }: ContextMenuSubContentProps) => {\n  const { getPopupContainer } = useDesignSystemContext();\n  const { theme } = useDesignSystemTheme();\n\n  return (\n    <ContextMenuPortal container={getPopupContainer && getPopupContainer()}>\n      <ContextMenuSubContent {...childrenProps} css={[dropdownContentStyles(theme), { minWidth }]}>\n        {children}\n      </ContextMenuSubContent>\n    </ContextMenuPortal>\n  );\n};\n\nexport interface ContextMenuItemProps extends RadixContextMenuItemProps {}\n\nexport const Item = ({ children, ...props }: ContextMenuItemProps) => {\n  const { theme } = useDesignSystemTheme();\n\n  return (\n    <ContextMenuItem {...props} css={dropdownItemStyles(theme)}>\n      {children}\n    </ContextMenuItem>\n  );\n};\n\nexport interface ContextMenuCheckboxItemProps extends RadixContextMenuCheckboxItemProps {}\n\nexport const CheckboxItem = ({ children, ...props }: ContextMenuCheckboxItemProps) => {\n  const { theme } = useDesignSystemTheme();\n\n  return (\n    <ContextMenuCheckboxItem {...props} css={dropdownItemStyles(theme)}>\n      <ContextMenuItemIndicator css={itemIndicatorStyles(theme)}>\n        <CheckIcon />\n      </ContextMenuItemIndicator>\n      {!props.checked && <div style={{ width: theme.general.iconFontSize + theme.spacing.xs }} />}\n      {children}\n    </ContextMenuCheckboxItem>\n  );\n};\n\nexport interface ContextMenuRadioItemProps extends RadixContextMenuRadioItemProps {}\n\nexport const RadioItem = ({ children, ...props }: ContextMenuRadioItemProps) => {\n  const { theme } = useDesignSystemTheme();\n\n  return (\n    <ContextMenuRadioItem\n      {...props}\n      css={[\n        dropdownItemStyles(theme),\n        {\n          '&[data-state=\"unchecked\"]': {\n            paddingLeft: theme.general.iconFontSize + theme.spacing.xs + theme.spacing.sm,\n          },\n        },\n      ]}\n    >\n      <ContextMenuItemIndicator css={itemIndicatorStyles(theme)}>\n        <CheckIcon />\n      </ContextMenuItemIndicator>\n      {children}\n    </ContextMenuRadioItem>\n  );\n};\n\nexport interface ContextMenuLabelProps extends RadixContextMenuLabelProps {}\n\nexport const Label = ({ children, ...props }: ContextMenuLabelProps) => {\n  const { theme } = useDesignSystemTheme();\n\n  return (\n    <ContextMenuLabel\n      {...props}\n      css={{ color: theme.colors.textSecondary, padding: `${theme.spacing.sm - 2}px ${theme.spacing.sm}px` }}\n    >\n      {children}\n    </ContextMenuLabel>\n  );\n};\n\nexport const Hint = ({ children }: { children: React.ReactNode }) => {\n  const { theme } = useDesignSystemTheme();\n\n  return <span css={{ display: 'inline-flex', marginLeft: 'auto', paddingLeft: theme.spacing.sm }}>{children}</span>;\n};\n\nexport const Separator = () => {\n  const { theme } = useDesignSystemTheme();\n  return <ContextMenuSeparator css={dropdownSeparatorStyles(theme)} />;\n};\n\nexport const itemIndicatorStyles = (theme: Theme) => css({ display: 'inline-flex', paddingRight: theme.spacing.xs });\n\nexport const ContextMenu = {\n  Root,\n  Trigger,\n  Label,\n  Item,\n  Group,\n  RadioGroup,\n  CheckboxItem,\n  RadioItem,\n  Arrow,\n  Separator,\n  Sub,\n  SubTrigger,\n  SubContent,\n  Content,\n  Hint,\n};\n","import { css } from '@emotion/react';\nimport * as RadixSlider from '@radix-ui/react-slider';\nimport { forwardRef } from 'react';\n\nimport { useDesignSystemTheme } from '../../design-system/Hooks';\nimport type { Theme } from '../../theme';\n\nexport type SliderRootProps = Omit<RadixSlider.SliderProps, 'orientation'>;\nexport type SliderTrackProps = RadixSlider.SliderTrackProps;\nexport type SliderRangeProps = RadixSlider.SliderRangeProps;\nexport type SliderThumbProps = RadixSlider.SliderThumbProps;\n\nconst getRootStyles = () => {\n  return css({\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n\n    '&[data-orientation=\"vertical\"]': {\n      flexDirection: 'column',\n      width: 20,\n      height: 100,\n    },\n\n    '&[data-orientation=\"horizontal\"]': {\n      height: 20,\n      width: 200,\n    },\n  });\n};\n\nexport const Root = forwardRef<HTMLElement, SliderRootProps>((props: SliderRootProps, ref): JSX.Element => {\n  return <RadixSlider.Root css={getRootStyles()} {...props} ref={ref} />;\n});\n\nconst getTrackStyles = (theme: Theme) => {\n  return css({\n    backgroundColor: theme.colors.grey100,\n    position: 'relative',\n    flexGrow: 1,\n    borderRadius: 9999,\n\n    '&[data-orientation=\"vertical\"]': {\n      width: 3,\n    },\n\n    '&[data-orientation=\"horizontal\"]': {\n      height: 3,\n    },\n  });\n};\n\nexport const Track = forwardRef<HTMLElement, SliderTrackProps>((props: SliderTrackProps, ref): JSX.Element => {\n  const { theme } = useDesignSystemTheme();\n\n  return <RadixSlider.Track css={getTrackStyles(theme)} {...props} ref={ref} />;\n});\n\nconst getRangeStyles = (theme: Theme) => {\n  return css({\n    backgroundColor: theme.colors.primary,\n    position: 'absolute',\n    borderRadius: 9999,\n    height: '100%',\n\n    '&[data-disabled]': {\n      backgroundColor: theme.colors.grey100,\n    },\n  });\n};\n\nexport const Range = forwardRef<HTMLElement, SliderRangeProps>((props: SliderRangeProps, ref): JSX.Element => {\n  const { theme } = useDesignSystemTheme();\n\n  return <RadixSlider.Range css={getRangeStyles(theme)} {...props} ref={ref} />;\n});\n\nconst getThumbStyles = (theme: Theme) => {\n  return css({\n    display: 'block',\n    width: 20,\n    height: 20,\n    backgroundColor: theme.colors.actionPrimaryBackgroundDefault,\n    boxShadow: `0 2px 4px 0 ${theme.colors.grey400}`,\n    borderRadius: 10,\n    outline: 'none',\n\n    '&:hover': {\n      backgroundColor: theme.colors.actionPrimaryBackgroundHover,\n    },\n\n    '&:focus': {\n      backgroundColor: theme.colors.actionPrimaryBackgroundPress,\n    },\n\n    '&[data-disabled]': {\n      backgroundColor: theme.colors.grey200,\n      boxShadow: 'none',\n    },\n  });\n};\n\nexport const Thumb = forwardRef<HTMLElement, SliderThumbProps>((props: SliderThumbProps, ref): JSX.Element => {\n  const { theme } = useDesignSystemTheme();\n\n  return <RadixSlider.Thumb css={getThumbStyles(theme)} {...props} ref={ref} />;\n});\n","import { css } from '@emotion/react';\nimport * as RadixToolbar from '@radix-ui/react-toolbar';\nimport { forwardRef } from 'react';\n\nimport { useDesignSystemTheme } from '../../design-system';\nimport type { Theme } from '../../theme';\n\nexport type ToolbarRootProps = Omit<RadixToolbar.ToolbarProps, 'orientation'>;\nexport type ToolbarButtonProps = RadixToolbar.ToolbarButtonProps;\nexport type ToolbarSeparatorProps = RadixToolbar.ToolbarSeparatorProps;\nexport type ToolbarLinkProps = RadixToolbar.ToolbarLinkProps;\nexport type ToolbarToogleGroupProps =\n  | RadixToolbar.ToolbarToggleGroupSingleProps\n  | RadixToolbar.ToolbarToggleGroupMultipleProps;\nexport type ToolbarToggleItemProps = RadixToolbar.ToolbarToggleItemProps;\n\nconst getRootStyles = (theme: Theme) => {\n  return css({\n    alignItems: 'center',\n    backgroundColor: theme.colors.backgroundSecondary,\n    border: `1px solid ${theme.colors.borderDecorative}`,\n    borderRadius: theme.borders.borderRadiusMd,\n    boxShadow: theme.general.shadowLow,\n    display: 'flex',\n    gap: theme.spacing.md,\n    width: 'max-content',\n    padding: theme.spacing.sm,\n  });\n};\n\nexport const Root = forwardRef<HTMLDivElement, ToolbarRootProps>((props: ToolbarRootProps, ref): JSX.Element => {\n  const { theme } = useDesignSystemTheme();\n\n  return <RadixToolbar.Root css={getRootStyles(theme)} {...props} ref={ref} />;\n});\n\nexport const Button = forwardRef<HTMLButtonElement, ToolbarButtonProps>(\n  (props: ToolbarButtonProps, ref): JSX.Element => {\n    return <RadixToolbar.Button {...props} ref={ref} />;\n  },\n);\n\nconst getSeparatorStyles = (theme: Theme) => {\n  return css({\n    alignSelf: 'stretch',\n    backgroundColor: theme.colors.borderDecorative,\n    width: 1,\n  });\n};\n\nexport const Separator = forwardRef<HTMLDivElement, ToolbarSeparatorProps>(\n  (props: ToolbarSeparatorProps, ref): JSX.Element => {\n    const { theme } = useDesignSystemTheme();\n    return <RadixToolbar.Separator css={getSeparatorStyles(theme)} {...props} ref={ref} />;\n  },\n);\n\nexport const Link = forwardRef<HTMLAnchorElement, ToolbarLinkProps>((props: ToolbarLinkProps, ref): JSX.Element => {\n  return <RadixToolbar.Link {...props} ref={ref} />;\n});\n\nexport const ToggleGroup = forwardRef<\n  HTMLDivElement,\n  RadixToolbar.ToolbarToggleGroupSingleProps | RadixToolbar.ToolbarToggleGroupMultipleProps\n>((props: ToolbarToogleGroupProps, ref): JSX.Element => {\n  return <RadixToolbar.ToggleGroup {...props} ref={ref} />;\n});\n\nconst getToggleItemStyles = (theme: Theme) => {\n  return css({\n    background: 'none',\n    color: theme.colors.textPrimary,\n    border: 'none',\n    cursor: 'pointer',\n    '&:hover': {\n      color: theme.colors.actionDefaultTextHover,\n    },\n    '&[data-state=\"on\"]': {\n      color: theme.colors.actionDefaultTextPress,\n    },\n  });\n};\n\nexport const ToggleItem = forwardRef<HTMLButtonElement, ToolbarToggleItemProps>(\n  (props: ToolbarToggleItemProps, ref): JSX.Element => {\n    const { theme } = useDesignSystemTheme();\n    return <RadixToolbar.ToggleItem css={getToggleItemStyles(theme)} {...props} ref={ref} />;\n  },\n);\n"],"names":["Text","Paragraph","Typography","BANNER_MIN_HEIGHT","BANNER_MAX_HEIGHT","_ref","process","env","NODE_ENV","name","styles","toString","_EMOTION_STRINGIFIED_CSS_ERROR__","useStyles","props","theme","bannerLevelToBannerColors","info","backgroundDefaultColor","colors","actionPrimaryBackgroundDefault","actionButtonBackgroundHoverColor","actionPrimaryBackgroundHover","actionButtonBackgroundPressColor","actionPrimaryBackgroundPress","textColor","actionPrimaryTextDefault","textHoverColor","actionPrimaryTextHover","textPressColor","actionPrimaryTextPress","warning","tagLemon","primitiveColors","grey800","error","actionDangerPrimaryBackgroundDefault","actionDangerPrimaryBackgroundHover","actionDangerPrimaryBackgroundPress","colorScheme","level","banner","css","iconContainer","description","spacing","xs","mainContent","sm","lg","messageTextBlock","descriptionBlock","rightContainer","closeIconContainer","closeIcon","actionButtonContainer","actionButton","levelToIconMap","_jsx","MegaphoneIcon","WarningIcon","DangerIcon","Banner","message","ctaText","onAccept","closable","onClose","closeButtonAriaLabel","closed","setClosed","React","useState","showingDescriptionEllipses","setShowingDescriptionEllipses","showingMessageEllipses","setShowingMessageEllipses","useDesignSystemTheme","children","Button","onClick","size","close","CloseIcon","messageElement","ellipsis","onEllipsis","bold","descriptionElement","rows","withoutMargins","descriptionElementWithConditionalTooltip","Tooltip","title","placement","_Fragment","_jsxs","className","chatInputStyles","container","suggestionButtons","textArea","button","ChatInput","onSubmit","textAreaProps","value","setValue","handleSubmit","style","backgroundPrimary","borderDecorative","Input","TextArea","autoSize","onChange","e","target","placeholder","onKeyDown","key","metaKey","ctrlKey","shiftKey","preventDefault","icon","CursorIcon","snippetStyles","header","buttonSvg","code","CodeSnippet","language","buttons","md","general","borderRadiusBase","grey700","grey300","feedbackStyles","feedbackPrompt","feedbackOptions","Feedback","onFeedback","isVisible","setIsVisible","textSecondary","color","FaceSmileIcon","FaceNeutralIcon","FaceFrownIcon","messageStyles","display","flexDirection","gap","paddingTop","paddingRight","paddingBottom","paddingLeft","backgroundColor","borderBottom","Message","isActiveUser","backgroundSecondary","buttonStyles","checkIcon","MessageActionButton","showCheck","setShowCheck","handleClick","_props$onClick","call","Error","useEffect","timeoutId","setTimeout","clearTimeout","green500","_css","svg","transition","opacity","CheckIcon","MessageBody","getPrefixedClassName","typographyClassname","marginBottom","headerStyles","leftContent","rightContent","avatar","position","left","top","backgroundSize","backgroundPosition","width","height","borderRadius","avatarDefaultBackgroundImage","MessageHeader","userName","customHeaderIcon","avatarURL","backgroundImage","paginationStyles","MessagePagination","onPrevious","onNext","current","total","actionDisabledText","cursor","ChevronLeftIcon","ChevronRightIcon","ChatUI","Root","RadixContextMenu","Trigger","ContextMenuTrigger","ItemIndicator","ContextMenuItemIndicator","Group","ContextMenuGroup","RadioGroup","ContextMenuRadioGroup","Arrow","ContextMenuArrow","Sub","ContextMenuSub","SubTrigger","ContextMenuSubTrigger","dropdownItemStyles","Content","_ref2","minWidth","childrenProps","getPopupContainer","useDesignSystemContext","ContextMenuPortal","ContextMenuContent","dropdownContentStyles","SubContent","_ref3","ContextMenuSubContent","Item","_ref4","ContextMenuItem","CheckboxItem","_ref5","ContextMenuCheckboxItem","itemIndicatorStyles","checked","iconFontSize","RadioItem","_ref6","ContextMenuRadioItem","Label","_ref7","ContextMenuLabel","padding","Hint","_ref8","marginLeft","Separator","ContextMenuSeparator","dropdownSeparatorStyles","ContextMenu","getRootStyles","forwardRef","ref","RadixSlider","getTrackStyles","grey100","flexGrow","Track","getRangeStyles","primary","Range","getThumbStyles","boxShadow","grey400","outline","grey200","Thumb","alignItems","border","borders","borderRadiusMd","shadowLow","RadixToolbar","getSeparatorStyles","alignSelf","Link","ToggleGroup","getToggleItemStyles","background","textPrimary","actionDefaultTextHover","actionDefaultTextPress","ToggleItem"],"mappings":"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"}